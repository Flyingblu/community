<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flyingblu.community.mapper.PostExtMapper">
    <resultMap id="BaseResultMap" type="com.flyingblu.community.model.Post">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Dec 30 18:47:49 CST 2021.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="uid" jdbcType="VARCHAR" property="uid"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="body" jdbcType="VARCHAR" property="body"/>
        <result column="vote" jdbcType="INTEGER" property="vote"/>
        <result column="community_id" jdbcType="INTEGER" property="communityId"/>
        <result column="topped" jdbcType="BIT" property="topped"/>
        <result column="best" jdbcType="BIT" property="best"/>
        <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>

    <select id="selectWithLimitOffset" resultMap="BaseResultMap">
        select * from community.post where delete_time is null
        <if test="cId != null">
            and community_id in
            <foreach collection="cId" item="acId" separator="," open="(" close=")">
                #{acId}
            </foreach>
        </if>
        order by update_time desc limit #{limit} offset #{offset}
    </select>

    <update id="setDeleteTimeToNow">
        update community.post
        set delete_time = now()
        where id = #{id}
    </update>

    <update id="setUpdateTimeToNow">
        update community.post
        set update_time = now()
        where id = #{id}
    </update>

    <update id="incVote">
        update community.post
        set vote = vote + 1
        where id = #{id}
    </update>

    <update id="decVote">
        update community.post
        set vote = vote - 1
        where id = #{id}
    </update>

    <update id="toggleBest">
        update community.post
        set best = not best
        where id = #{id}
    </update>

    <update id="toggleTop">
        update community.post
        set top = not top
        where id = #{id}
    </update>
</mapper>